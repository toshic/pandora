name: Performance tests

on:
  - push
#  release:
#    types: [ created ]

env:
  AWS_ENDPOINT_URL: https://storage.yandexcloud.net
  AWS_REGION: ru-central1

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.21.x
          cache: true
      - id: test-go-setup
        run: go test -race -covermode atomic ./...
      - id: build
        run: |
          export GOOS=linux
          export CGO_ENABLED=0
          go build -o pandora-perf
      - id: upload-binary
        uses: osiegmar/s3-publisher-action@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.YC_S3_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_S3_KEY_SECRET }}
        with:
          dir: .
          includes: pandora-perf
          bucket: ${{ vars.YC_LOADTESTING_DATA_BUCKET }}

  test-pandora-perf:
    needs: [ build-and-upload ]
    runs-on: ubuntu-latest
    concurrency: { group: loadtesting }
    env:
      PERFTESTS_ROOT: "./performance-test/test-config"
      PERFTESTS_AGENT_NAME: "agent-pandora-perf-medium"
      TEST_LABELS: "version=${{ github.ref_name }}"
      AGENT_FILTER: "name = 'agent-pandora-perf-medium'"
    steps:
      - uses: actions/checkout@v4
      - id: run-perftests
        name: Run Pandora Performance Tests
        uses: yandex-cloud/yc-github-loadtesting-ci/test-suite@alpha-fixes
        with:
          action-log-level: INFO
          auth-key-json-base64: ${{ secrets.YC_LOADTESTING_KEY_JSON_BASE64 }}
          folder-id: ${{ vars.YC_LOADTESTING_FOLDER_ID }}
          data-bucket: ${{ vars.YC_LOADTESTING_DATA_BUCKET }}
          add-labels: "version=${{ github.ref_name }}"
          agent-filter: "name='${{ env.PERFTESTS_AGENT_NAME }}'"
          test-directories: |
            "${{ env.PERFTESTS_ROOT }}/pandora-perf-grpc-2000inst-sleep0ms-overflow-false"
            "${{ env.PERFTESTS_ROOT }}/pandora-perf-grpc-2000inst-sleep50ms-overflow-false"
            "${{ env.PERFTESTS_ROOT }}/pandora-perf-grpc-300inst-sleep0ms-overflow-false"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-grpc-2000inst-sleep0ms-overflow-true"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-grpc-2000inst-sleep50ms-overflow-true"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-grpc-300inst-sleep0ms-overflow-true"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-http-uri-300inst-sleep0ms-overflow-false"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-http-uri-2000inst-sleep0ms-overflow-false"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-http-uri-2000inst-sleep50ms-overflow-false"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-http-uri-300inst-sleep0ms-overflow-true"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-http-uri-2000inst-sleep0ms-overflow-true"
          # "${{ env.PERFTESTS_ROOT }}/pandora-perf-http-uri-2000inst-sleep50ms-overflow-true"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: perftest-artifacts
          path: ${{ steps.run-perftests.outputs.artifacts-dir }}

      - id: make-test-infos-json
        if: always()
        run: cp "${{ steps.run-perftests.outputs.test-infos-file }}" test-infos.json

      - id: make-imbalance-md-str
        name: Generate report
        uses: sergeysova/jq-action@v2
        with:
          multiline: true
          cmd: |
            jq -r '.[] | "- \(.details.name): **\(.summary.imbalance_point.rps // 0 | tonumber)**"' test-infos.json > imbalance.md

      - uses: actions/upload-artifact@v4
        with:
          name: imbalance.md
          path: imbalance.md

      - name: Update release
        uses: tubone24/update_release@v1.3.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body_path: imbalance.md
          is_append_body: true

